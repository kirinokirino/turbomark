[package]
name = "turbomark"
version = "0.1.0"
authors = ["kirinokirino <kirinokirino@lunariko.com>"]
edition = "2018"
description = "Wasm target for pulldown-cmark."
repository = ""
license = "mit"
keywords = ["markdown"]
categories = ["wasm", "web-programming", "text-editors", "text-processing"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
wasm-bindgen = "0.2.67"
pulldown-cmark =  { version = "0.7.2", default-features = false }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.17"

[profile.release]
opt-level = 3
lto = true

[package.metadata.wasm-pack.profile.release]
# currently there is a bug, wasm-opt by hand with:
# wasm-opt ./pkg/turbomark_bg.wasm -o ./pkg/turbomark_bg.wasm -O --enable-mutable-globals
wasm-opt = false